Organizations:
  - &ordererOrganization
    Name: ordererOrganization
    ID: ordererMSP
    MSPDir: ../anbang-ca-server/ordererOrganization/anbang.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('ordererMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('ordererMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('ordererMSP.admin')"

  - &buyerOrganization
    Name: buyerOrganization
    ID: buyerMSP
    MSPDir: ../anbang-ca-server/buyerOrganization/anbang.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('buyerMSP.admin', 'buyerMSP.peer', 'buyerMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('buyerMSP.admin', 'buyerMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('buyerMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('buyerMSP.peer')"
      # CustomPolicy:
      #     Type: Signature
      #     Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"

    AnchorPeers:
      - Host: localhost
        Port: 7051

  - &sellerOrganization
    Name: sellerOrganization
    ID: sellerMSP
    MSPDir: ../anbang-ca-server/sellerOrganization/anbang.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('sellerMSP.admin', 'sellerMSP.peer', 'sellerMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('sellerMSP.admin', 'sellerMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('sellerMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('sellerMSP.peer')"
      # CustomPolicy:
      #     Type: Signature
      #     Rule: "OR('Org1MSP.admin')"

    AnchorPeers:
      - Host: localhost
        Port: 9051

  - &agentOrganization
    Name: agentOrganization
    ID: agentMSP
    MSPDir: ../anbang-ca-server/agentOrganization/anbang.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('agentMSP.admin', 'agentMSP.peer', 'agentMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('agentMSP.admin', 'agentMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('agentMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('agentMSP.peer')"
      # CustomPolicy:
      #     Type: Signature
      #     Rule: "OR('Org1MSP.admin')"

    AnchorPeers:
      - Host: localhost
        Port: 9051


Capabilities:
  Channel: &ChannelCapabilities
    V2_0: true
  Orderer: &OrdererCapabilities
    V2_0: true
  Application: &ApplicationCapabilities
    V2_0: true

Application: &ApplicationDefaults
  ACLs: &ACLsDefault
    # This section provides defaults for policies for various resources
    # in the system. These "resources" could be functions on system chaincodes
    # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
    # (e.g.,who can receive Block events). This section does NOT specify the resource's
    # definition or API, but just the ACL policy for it.
    #
    # User's can override these defaults with their own policy mapping by defining the
    # mapping under ACLs in their channel definition

    #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

    # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
    _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

    # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
    _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers

    # ACL policy for _lifecycle's "QueryNamespaceDefinitions" function
    _lifecycle/QueryNamespaceDefinitions: /Channel/Application/Readers

    #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

    # ACL policy for lscc's "getid" function
    lscc/ChaincodeExists: /Channel/Application/Readers

    # ACL policy for lscc's "getdepspec" function
    lscc/GetDeploymentSpec: /Channel/Application/Readers

    # ACL policy for lscc's "getccdata" function
    lscc/GetChaincodeData: /Channel/Application/Readers

    # ACL Policy for lscc's "getchaincodes" function
    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

    #---Query System Chaincode (qscc) function to policy mapping for access control---#

    # ACL policy for qscc's "GetChainInfo" function
    qscc/GetChainInfo: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByNumber" function
    qscc/GetBlockByNumber: /Channel/Application/Readers

    # ACL policy for qscc's  "GetBlockByHash" function
    qscc/GetBlockByHash: /Channel/Application/Readers

    # ACL policy for qscc's "GetTransactionByID" function
    qscc/GetTransactionByID: /Channel/Application/Readers
    # qscc/GetTransactionByID: /Channel/Application/CustomPolicy

    # ACL policy for qscc's "GetBlockByTxID" function
    qscc/GetBlockByTxID: /Channel/Application/Readers

    #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

    # ACL policy for cscc's "GetConfigBlock" function
    cscc/GetConfigBlock: /Channel/Application/Readers

    # ACL policy for cscc's "GetConfigTree" function
    cscc/GetConfigTree: /Channel/Application/Readers

    # ACL policy for cscc's "SimulateConfigTreeUpdate" function
    cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

    #---Miscellanesous peer function to policy mapping for access control---#

    # ACL policy for invoking chaincodes on peer
    peer/Propose: /Channel/Application/Writers
    # peer/Propose: /Channel/Application/Restrict

    # ACL policy for chaincode to chaincode invocation
    peer/ChaincodeToChaincode: /Channel/Application/Readers

    #---Events resource to policy mapping for access control###---#

    # ACL policy for sending block events
    event/Block: /Channel/Application/Readers

    # ACL policy for sending filtered block events
    event/FilteredBlock: /Channel/Application/Readers


  Organizations:
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    LifecycleEndorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
    Endorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
    # Restrict:
    #     Type: ImplicitMeta
    #     Rule: "ANY CustomPolicy"

  Capabilities:
    <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

  OrdererType: etcdraft

  EtcdRaft:
    Consenters:
      - Host: localhost
        Port: 7050
        ClientTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer1.anbang.com/tls/server.crt
        ServerTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer1.anbang.com/tls/server.crt

  Addresses:
    - localhost:7050

  BatchTimeout: 2s

  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 99 MB
    PreferredMaxBytes: 512 KB

  Organizations:

  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"

Channel: &ChannelDefaults
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

  Capabilities:
    <<: *ChannelCapabilities


Profiles:
  AnbangChannel:
    Consortium: SampleConsortium
    <<: *ChannelDefaults
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *buyerOrganization
        - *sellerOrganization
        - *agentOrganization
      Capabilities:
        <<: *ApplicationCapabilities
  AnbangOrdererGenesis:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults
      OrdererType: etcdraft
      EtcdRaft:
        Consenters:
          - Host: localhost
            Port: 7050
            ClientTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer1.anbang.com/tls/server.crt
            ServerTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer1.anbang.com/tls/server.crt
          - Host: localhost
            Port: 8050
            ClientTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer2.anbang.com/tls/server.crt
            ServerTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer2.anbang.com/tls/server.crt
          - Host: localhost
            Port: 9050
            ClientTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer3.anbang.com/tls/server.crt
            ServerTLSCert: ../anbang-ca-server/ordererOrganization/anbang.com/orderers/orderer3.anbang.com/tls/server.crt
      Addresses:
        - localhost:7050
        - localhost:8050
        - localhost:9050

      Organizations:
        - *ordererOrganization
      Capabilities:
        <<: *OrdererCapabilities
    Consortiums:
      SampleConsortium:
        Organizations:
          - *buyerOrganization
          - *sellerOrganization
          - *agentOrganization
